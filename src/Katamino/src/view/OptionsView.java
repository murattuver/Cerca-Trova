/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.MainController;
import java.util.LinkedList;
import java.util.Properties;

/**
 *
 * @author Cerca-Trova
 */
public class OptionsView extends javax.swing.JPanel {
    
    //IMPORTANT NOTE: Change this if you add a resolution.
    
    //Reference to the Controller.
    MainController gameController = null;
   
    /**
     * Creates new form OptionsView
     */
    public OptionsView(MainController gameController) {
        
        //Connecting view to the Controller.
        this.gameController = gameController.getInstance();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resolutionTextLabel = new javax.swing.JLabel();
        resolutionComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        themeComboBox = new javax.swing.JComboBox<>();
        musicTextLabel = new javax.swing.JLabel();
        musicCheckBox = new javax.swing.JCheckBox();
        soundTextLabel = new javax.swing.JLabel();
        soundCheckBox = new javax.swing.JCheckBox();
        backToMainMenuButton = new javax.swing.JButton();
        fullScreenTextLabel = new javax.swing.JLabel();
        fullScreenCheckBox = new javax.swing.JCheckBox();
        saveOptionsButton = new javax.swing.JButton();

        setAutoscrolls(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        resolutionTextLabel.setText("Resolution:");

        resolutionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "800 x 600", "1280 x 800", "1920 Ã— 1080" }));
        resolutionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resolutionComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Theme:");

        themeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Classic Theme", "Item 2", "Item 3", "Item 4" }));

        musicTextLabel.setText("Music:");

        musicCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musicCheckBoxActionPerformed(evt);
            }
        });

        soundTextLabel.setText("Sound:");

        backToMainMenuButton.setText("Back to Main Menu");
        backToMainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToMainMenuButtonActionPerformed(evt);
            }
        });

        fullScreenTextLabel.setText("FullScreen:");

        fullScreenCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullScreenCheckBoxActionPerformed(evt);
            }
        });

        saveOptionsButton.setText("Save Options");
        saveOptionsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveOptionsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(resolutionTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(fullScreenTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(musicTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(soundTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(themeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fullScreenCheckBox)
                            .addComponent(resolutionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(soundCheckBox)
                            .addComponent(musicCheckBox)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveOptionsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backToMainMenuButton)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resolutionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resolutionTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fullScreenCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(musicCheckBox))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fullScreenTextLabel)
                        .addGap(20, 20, 20)
                        .addComponent(musicTextLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(soundTextLabel)
                    .addComponent(soundCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(themeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backToMainMenuButton)
                    .addComponent(saveOptionsButton))
                .addContainerGap(61, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void resolutionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resolutionComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resolutionComboBoxActionPerformed

    private void musicCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musicCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_musicCheckBoxActionPerformed

    private void backToMainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToMainMenuButtonActionPerformed
        //Returns Values to initials.
        gameController.getInstance().loadOptions();
        
        //Goes back to the mainMenu.
        gameController.getInstance().optionsToMainMenu();
    }//GEN-LAST:event_backToMainMenuButtonActionPerformed

    private void fullScreenCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullScreenCheckBoxActionPerformed

    }//GEN-LAST:event_fullScreenCheckBoxActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void saveOptionsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveOptionsButtonActionPerformed
       
        //Setting a save file to sent to the MainController.
        Properties prop = new Properties();
    
        prop.setProperty("resolution", resolutionComboBox.getSelectedItem().toString());
        prop.setProperty("isFullScreen", fullScreenCheckBox.isSelected() + "");
        prop.setProperty("isMusicOn", musicCheckBox.isSelected() + "");
        prop.setProperty("isSoundsOn", soundCheckBox.isSelected() + "");
        prop.setProperty("theme", themeComboBox.getSelectedItem().toString());
   
        //Sending properties file to the MainController.
        gameController.getInstance().saveOptions(prop);
        
        //Applying changes. TODO: other options needs to be implemented.
        gameController.getInstance().setFullScreen(fullScreenCheckBox.isSelected());
    }//GEN-LAST:event_saveOptionsButtonActionPerformed
    
    //Gets settings from the MainController and sets their values to the view.
    public void setOptionsValues(LinkedList<String> list) {

        resolutionComboBox.setSelectedItem(list.pop());
        
        fullScreenCheckBox.setSelected(Boolean.parseBoolean(list.pop()));
        gameController.getInstance().setFullScreen(fullScreenCheckBox.isSelected());
        
        musicCheckBox.setSelected(Boolean.parseBoolean(list.pop()));
        soundCheckBox.setSelected(Boolean.parseBoolean(list.pop()));
        themeComboBox.setSelectedItem(list.pop());
        
                   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backToMainMenuButton;
    private javax.swing.JCheckBox fullScreenCheckBox;
    private javax.swing.JLabel fullScreenTextLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox musicCheckBox;
    private javax.swing.JLabel musicTextLabel;
    private javax.swing.JComboBox<String> resolutionComboBox;
    private javax.swing.JLabel resolutionTextLabel;
    private javax.swing.JButton saveOptionsButton;
    private javax.swing.JCheckBox soundCheckBox;
    private javax.swing.JLabel soundTextLabel;
    private javax.swing.JComboBox<String> themeComboBox;
    // End of variables declaration//GEN-END:variables
}
